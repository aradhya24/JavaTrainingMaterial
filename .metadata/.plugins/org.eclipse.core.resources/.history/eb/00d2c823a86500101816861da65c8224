package strategyassighnment.guitar.test;

import java.util.InputMismatchException;
import java.util.Scanner;

import strategyassighnment.guitar.behaviour.playingstyle.FingerPicking;
import strategyassighnment.guitar.behaviour.playingstyle.Strumming;
import strategyassighnment.guitar.behaviour.playingstyle.Tapping;
import strategyassighnment.guitar.behaviour.sound.Acoustic;
import strategyassighnment.guitar.behaviour.sound.Distortion;
import strategyassighnment.guitar.behaviour.sound.Electric;
import strategyassighnment.guitar.behaviour.tuning.DropDTuning;
import strategyassighnment.guitar.behaviour.tuning.StandardTuning;
import strategyassighnment.guitar.model.AcousticGuitar;
import strategyassighnment.guitar.model.ElectricGuitar;
import strategyassighnment.guitar.model.Guitar;

public class GuitarTest {

	private static Scanner scanner = new Scanner(System.in);
	private static Guitar selectedGuitar = null;

	public static void main(String[] args) {
		selectGuitarType(selectedGuitar); 
	}

	

	private static void showMainMenu() {
		while (true) {
			System.out.println("\nChoose Operation:");
			System.out.println("1. Change Playing Style");
			System.out.println("2. Change Sound");
			System.out.println("3. Change Tuning");
			System.out.println("4. Show Guitar Info");
			System.out.println("5. Polish Guitar");
			System.out.println("6. Exit");

			int action = getInput();

			switch (action) {
			case 1 -> handlePlayingStyle();
			case 2 -> handleSound();
			case 3 -> handleTuning();
			case 4 -> selectedGuitar.showGuitarInfo();
			case 5 -> selectedGuitar.polish();
			case 6 -> {
				System.out.println("Goodbye!");
				return;
			}
			default -> System.out.println("Invalid main menu choice. Try again.");
			}
		}
	}

	private static void handlePlayingStyle() {
		while (true) {
			System.out.println("Choose Playing Style:");
			System.out.println("1. Strumming");
			System.out.println("2. Finger Picking");
			System.out.println("3. Tapping");
			System.out.println("9. Exit Playing Style Menu");

			int choice = getInput();
			if (choice == 9)
				break;

			switch (choice) {
			case 1 -> selectedGuitar.setPlayingStyleBehaviour(new Strumming());
			case 2 -> selectedGuitar.setPlayingStyleBehaviour(new FingerPicking());
			case 3 -> selectedGuitar.setPlayingStyleBehaviour(new Tapping());
			default -> {
				System.out.println("Invalid playing style. Try again or press 9 to exit.");
				continue;
			}
			}

			selectedGuitar.playStyle();
			break;
		}
	}

	private static void handleSound() {
		while (true) {
			System.out.println("Choose Sound Type:");
			System.out.println("1. Acoustic");
			System.out.println("2. Electric");
			System.out.println("3. Distortion");
			System.out.println("9. Exit Sound Menu");

			int choice = getInput();
			if (choice == 9)
				break;

			switch (choice) {
			case 1 -> selectedGuitar.setSoundBehaviour(new Acoustic());
			case 2 -> selectedGuitar.setSoundBehaviour(new Electric());
			case 3 -> selectedGuitar.setSoundBehaviour(new Distortion());
			default -> {
				System.out.println("Invalid sound type. Try again or press 9 to exit.");
				continue;
			}
			}

			selectedGuitar.sound();
			break;
		}
	}

	private static void handleTuning() {
		while (true) {
			System.out.println("Choose Tuning:");
			System.out.println("1. Standard Tuning");
			System.out.println("2. Drop D Tuning");
			System.out.println("9. Exit Tuning Menu");

			int choice = getInput();
			if (choice == 9)
				break;

			switch (choice) {
			case 1 -> selectedGuitar.setTuningBehaviour(new StandardTuning());
			case 2 -> selectedGuitar.setTuningBehaviour(new DropDTuning());
			default -> {
				System.out.println("Invalid tuning. Try again or press 9 to exit.");
				continue;
			}
			}

			selectedGuitar.tune();
			break;
		}
	}

	private static int getInput() {
		int input = -1;
		try {
			input = scanner.nextInt();
			scanner.nextLine();
		} catch (InputMismatchException e) {
			System.out.println("Input Mismatched. Please enter digits only.");
			scanner.nextLine();
		}
		return input;
	}
}
